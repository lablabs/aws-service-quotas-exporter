# Default values for aws-service-quotas-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/lablabs/aws-service-quotas-exporter
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 1000
   capabilities:
     add: ["NET_ADMIN", "NET_RAW"]

service:
  type: ClusterIP
  port: 8080


env:
#  - name: "AWS_REGION"
#    value: "eu-central-1"

resources:
  # This was measured for 5 quotas and 5 metrics script
   requests:
     cpu: 400m
     memory: 200Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi


livenessProbe:
  httpGet:
    path: /liveness
    port: http
readinessProbe:
  httpGet:
    path: /readiness
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set the namespace the ServiceMonitor should be deployed, if empty namespace will be .Release.Namespace
  namespace: ""
  # Service monitor labels
  labels: {}
  # Set how frequently Prometheus should scrape
  interval: 30s
  # Set path to metrics endpoint
  path: /metrics
  # Set timeout for scrape
  timeout: 10s
  # Set relabel_configs as per https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  relabelings: []
  # Set of labels to transfer on the Kubernetes Service onto the target.
  targetLabels: []
  metricRelabelings: []

exporter:
  address: "0.0.0.0:8080"
  log:
    level: "DEBUG"
    format: "json"
  config: {}
#    scrape:
#    quotas: []
#    metrics: []
